[
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "\n    <div class=\"main-container-report\" style=\"display: flex; gap: 10px; width:40%\">\n\n  <a href=\"/app/query-report/Placement%20Target%20vs%20Achievement\" class=\"card border rounded-lg\" style=\"height: 84px; font-size: 11px; color:#525252; text-decoration: none; flex: 1;\">\n\n    <div class=\"p-3\">\n\n      <div style=\"font-size: 11.5px; font-weight: 550;\">Placement Target vs Achievement</div>\n\n      <div class=\"data\" id=\"fpo_count\" style=\"font-size: 20px; font-weight: bold;\">0</div>\n\n    </div>\n\n  </a>\n\n</div>\n\n ",
  "modified": "2024-07-16 13:26:15.142211",
  "name": "Report List",
  "private": 0,
  "roles": [],
  "script": "async function callAPI(options) {\n  return new Promise((resolve, reject) => {\n    frappe.call({\n      ...options,\n      callback: async function (response) {\n        resolve(response?.message || response?.value)\n      }\n    });\n  })\n}\n \ncallAPI({\n  method: 'aisect.services.api.candidate_placement_ging',\n  freeze: true,\n  freeze_message: __(\"Getting\"),\n}).then(forms_lists => {\n    \n    var fpo_count = root_element.getElementById('fpo_count');\n    fpo_count.innerHTML =  forms_lists !== undefined ? forms_lists[0].candidate_count : 0; \n});",
  "style": "@media (max-width: 765px) {\n    .main-container-report{\n        width:100% !important;\n    }\n}"
 },
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<div id=\"geo_data\" class=\"card py-2 px-3\"></div>",
  "modified": "2024-07-18 14:23:45.650658",
  "name": "User Assigned Geography",
  "private": 0,
  "roles": [
   {
    "parent": "User Assigned Geography",
    "parentfield": "roles",
    "parenttype": "Custom HTML Block",
    "role": "Zonal Head"
   },
   {
    "parent": "User Assigned Geography",
    "parentfield": "roles",
    "parenttype": "Custom HTML Block",
    "role": "State Head"
   },
   {
    "parent": "User Assigned Geography",
    "parentfield": "roles",
    "parenttype": "Custom HTML Block",
    "role": "State Placement Coordinator"
   },
   {
    "parent": "User Assigned Geography",
    "parentfield": "roles",
    "parenttype": "Custom HTML Block",
    "role": "Centre Head"
   },
   {
    "parent": "User Assigned Geography",
    "parentfield": "roles",
    "parenttype": "Custom HTML Block",
    "role": "Centre Placement Coordinator"
   }
  ],
  "script": "const get_permission = async (user) => {\n    let list = await callAPI({\n        method: 'aisect.services.api.user_assign_geography',\n        freeze: true,\n        args: {\n            doctype: \"User Permission\",\n            user: user,\n            view: \"List\",\n            order_by: \"\",\n            group_by: '',\n        },\n\n        freeze_message: __(\"Getting Permissions\"),\n    });\n    return list;\n};\n\nconst rander_html = async ()=>{\n    let user=frappe.user.name;\n    let list = await get_permission(user);\n    let blocks = `<nav aria-label=\"breadcrumb1\" class=\"d-flex align-items-center justify-content-between\">\n            <ol class=\"breadcrumb1\" >`;\n    for (let i = 0; i < list?.length; i++) {\n        blocks = blocks +\n       ` <li class=\"breadcrumb-item1 active\" aria-current=\"page\">${list?.[i].allow} :- ${list?.[i].name_value}</li> `\n    }\n    blocks = blocks + `</ol><p class=\"user_name_a\">${frappe.session.user_fullname}</p></nav>`;\n    root_element.getElementById('geo_data').innerHTML = list?.length ? blocks : '';\n};\n\nrander_html();",
  "style": ".breadcrumb1 {\n    display: flex;\n    list-style: none;\n    padding: 0;\n    margin: 0;\n    background-color: transparent;\n}\n\n.breadcrumb-item1 {\n    margin-right: 0.5rem;\n}\n\n.breadcrumb-item1 + .breadcrumb-item1::before {\n    content: \"/\";\n    margin-right: 0.5rem;\n    color: #6c757d;\n}\n\n.breadcrumb-item1.active {\n    color: #007bff;\n}\n\n.user_name_a {\n    font-weight: bold;\n    color:#264796 !important;\n    margin-bottom: 0px;\n}\n\n/*@media (max-width: 765px) {*/\n/*    .main-container-report{*/\n/*        width:100% !important;*/\n/*    }*/\n/*}*/"
 },
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<div class=\"scroll-container-success d-flex\">\n    <div class=\"d-flex success_card_body\">\n    \n    </div>\n    <div aria-hideen=\"true\" class=\"d-flex success_card_body\">\n    \n    </div>\n</div>",
  "modified": "2024-07-15 11:41:45.442200",
  "name": "Success Story Live",
  "private": 0,
  "roles": [],
  "script": "\n    async function callAPI(options) {\n        return new Promise((resolve, reject) => {\n            frappe.call({\n                ...options,\n                callback: async function (response) {\n                    resolve(response?.message || response?.value)\n                }\n            });\n        });\n    }\n    \n    callAPI({\n        method: 'aisect.services.api.success_story_data',\n        freeze: true,\n        freeze_message: __(\"Getting\"),\n    }).then(forms_lists => {\n        var card_titles = ``;\n        forms_lists.forEach((item) => {\n            card_titles += `\n                <div>\n                    <div class=\"card\" style=\"min-width: 380px; width:380px; min-height:180px;\">\n                    <div class=\"card-body no-gutters\">\n                        <div class=\"d-flex align-items-center\" style=\"gap:20px;\">\n                            <div class=\"\">\n                          <img src=\"${item?.candidate_image}\" class=\"img\" alt=\"...\">\n                            </div>\n                          <div class=\"\">\n                            <a href=\"/app/candidate-success-stories/${item.name}\">\n                                <h5 class=\"card-title\">${item?.full_name}</h5>\n                            </a>\n                            <h6 class=\"card-subtitle mb-2 text-muted\">${item?.achievement_after_training}</h6>\n                          </div>\n                        </div>\n                    <div class=\"mt-4\">\n                        <span style=\"font-size: 25px;display:block;line-height:0px;color:#264796;\">&#x275D;</span>\n                        <span class=\"card-text\">${item?.remarks_of_the_training}</span>\n                    </div>\n                  </div>\n                </div>\n                </div>\n            `;\n        });\n       \n       root_element.querySelectorAll('.success_card_body').forEach((element)=>{\n           element.innerHTML = card_titles\n       });\n    });\n",
  "style": ".success_card_body{\n    gap:15px;\n    animation: scroll 14s linear infinite;\n}\n\n.img{\n  width: 3rem;\n  height: 3rem;\n  border-radius: 9999px;\n  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\n  object-fit: cover;\n}\n\n.scroll-container-success{\n    position: relative;\n    overflow: hidden;\n    gap:15px;\n    scroll-behavior: smooth;\n  /*  mask-image: linear-gradient(*/\n  /*      var(--mask-direction, to right),*/\n  /*      hsl(0 0% 0% / 0),*/\n  /*      hsl(0 0% 0% / 1) 2%,*/\n  /*      hsl(0 0% 0% / 1) 98%,*/\n  /*      hsl(0 0% 0% / 0)*/\n  /*);*/\n}\n\n@keyframes scroll {\n    0% {\n        transform: translateX(0);\n    }\n    100% {\n        transform: translateX(calc(-100% - 15px));\n    }\n}\n\n/* Repeat the content to make the scroll effect continuous */\n#success_card_body::after {\n    content: attr(data-content);\n    display: block;\n}\n\n.scroll-container-success:hover .success_card_body {\n    animation-play-state: paused;\n}\n @keyframes fade {\n  to {\n    opacity: 0;\n    visibility: hidden;\n  }\n}"
 },
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<div class=\"main-container\" style=\"display: flex; gap: 15px; width: 100%; border: 1px solid #f0f0f0; border-radius: 10px; padding:10px;\">\n  <div class=\"p-2\">\n    <div style=\"font-size: 11.5px; font-weight: 550; margin-bottom: 5px;\">AVG SALARY OFFERED</div>\n    <div class=\"data\" id=\"avg_salary\" style=\"font-size: 20px; font-weight: bold; letter-spacing: 2px;\">₹</div>\n  </div>\n</div>\n",
  "modified": "2024-07-16 15:07:03.609128",
  "name": "Avg monthly salary",
  "private": 0,
  "roles": [],
  "script": "async function callAPI(options) {\n  return new Promise((resolve, reject) => {\n    frappe.call({\n      ...options,\n      callback: async function (response) {\n        resolve(response?.message || response?.value)\n      }\n    });\n  })\n}\n \ncallAPI({\n  method: 'aisect.services.api.Avg_monthly_salary',\n  freeze: true,\n  freeze_message: __(\"Getting\"),\n}).then(forms_lists => {\n   var avg_salary = root_element.getElementById('avg_salary');\n    var formattedIncome = forms_lists[0]?.average_income ? forms_lists[0].average_income.toLocaleString('en-IN') : 0;\n    avg_salary.innerHTML = `<span>₹ ${formattedIncome}</span>`; \n});",
  "style": null
 }
]