[
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<iframe title=\"AISECT\" width=\"100%\" height=\"700\" src=\"https://app.powerbi.com/view?r=eyJrIjoiYzdjZDczN2ItMTg4YS00Y2E3LTkyODMtNjc3NzBlYzk3N2U2IiwidCI6IjZiZTk4NzZkLTI0NzAtNDJjYi05ZjQyLTA2MDQ1NGZhYjUzZCJ9\" frameborder=\"0\" allowFullScreen=\"true\"></iframe>",
  "modified": "2024-10-28 11:39:34.477389",
  "name": "Power BI",
  "private": 0,
  "roles": [],
  "script": null,
  "style": null
 },
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<div id=\"geo_data\" class=\"\"></div>",
  "modified": "2024-08-12 08:20:05.463336",
  "name": "User Assigned Geography",
  "private": 0,
  "roles": [
   {
    "role": "Zonal Head"
   },
   {
    "role": "State Head"
   },
   {
    "role": "State Placement Coordinator"
   },
   {
    "role": "Centre Head"
   },
   {
    "role": "Centre Placement Coordinator"
   }
  ],
  "script": "const get_permission = async (user) => {\n    let list = await callAPI({\n        method: 'aisect.services.api.user_assign_geography',\n        freeze: true,\n        args: {\n            doctype: \"User Permission\",\n            user: user,\n            view: \"List\",\n            order_by: \"\",\n            group_by: '',\n        },\n\n        freeze_message: __(\"Getting Permissions\"),\n    });\n    return list;\n};\n\nconst rander_html = async ()=>{\n    let user=frappe.user.name;\n    let list = await get_permission(user);\n    let blocks = `<nav aria-label=\"breadcrumb1\" style=\"gap:6px;\" class=\"d-flex flex-wrap align-items-center justify-content-between\">\n            <ol class=\"breadcrumb1 flex-wrap\" >`;\n    for (let i = 0; i < list?.length; i++) {\n        blocks = blocks +\n       ` <li class=\" card px-3 py-2\" aria-current=\"page\"\n       style=\"color:white; background:${list?.[i].allow =='Zone' ?'#FABC3C':list?.[i].allow =='State' ?'#FFB238':list?.[i].allow =='District' ?'#F19143':'#FF773D'}\"\n      \n       >${list?.[i].allow}:- ${list?.[i].name_value}</li> `\n    }\n    blocks = blocks + `</ol><p class=\"user_name_a card px-3 py-2\">${frappe.session.user_fullname}</p></nav>`;\n    root_element.getElementById('geo_data').innerHTML = list?.length ? blocks : '';\n};\n\nrander_html();",
  "style": ".breadcrumb1 {\n    display: flex;\n    gap:6px;\n    list-style: none;\n    padding: 0;\n    margin: 0; \n}\n\n.breadcrumb-item1 {\n    margin-right: 0.5rem;\n}\n\n.user_name_a {\n    background:#F55536;\n    font-weight: bold;\n    color:white;\n    color:white !important;\n    margin-bottom: 0px;\n}\ndiv[custom_block_name=\"User Assigned Geography\"] .widget {\n    padding: 0px !important;\n}\n@media (max-width: 765px) {\n    .card{\n        width:100% !important;\n    }\n    /*.user_name_a{*/\n    /*    margin-top:6px !important;*/\n    /*}*/\n}\n"
 },
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<h4>Candidate Success Stories</h4>\n<div class=\"scroll-container-success d-flex pb-3\">\n    <div class=\"d-flex success_card_body\">\n    \n    </div>\n    <div aria-hideen=\"true\" class=\"d-flex success_card_body\">\n    \n    </div>\n</div>",
  "modified": "2024-07-31 18:12:37.256481",
  "name": "Success Story Live",
  "private": 0,
  "roles": [],
  "script": "\n    async function callAPI(options) {\n        return new Promise((resolve, reject) => {\n            frappe.call({\n                ...options,\n                callback: async function (response) {\n                    resolve(response?.message || response?.value)\n                }\n            });\n        });\n    }\n    \n    callAPI({\n        method: 'aisect.services.api.success_story_data',\n        freeze: true,\n        freeze_message: __(\"Getting\"),\n    }).then(forms_lists => {\n        var card_titles = ``;\n        forms_lists.forEach((item) => {\n            card_titles += `\n                <div>\n                    <div class=\"card\" style=\"min-width: 420px; width:420px; min-height:180px;\">\n                    <div class=\"card-body no-gutters\">\n                        <div class=\"d-flex align-items-center\" style=\"gap:20px;\">\n                            <div class=\"\"> \n                          <img src=\"${item?.candidate_image}\" class=\"img\" >\n                            </div>\n                          <div class=\"\">\n                            <a ${frappe.user_roles.includes('Head Office (PMU)') ? 'href=\"/app/candidate-success-stories/' + item.name + '\"' : ''}>\n                                <h5 class=\"card-title\">${item?.full_name}</h5>\n                            </a>\n                            <h6 class=\"card-subtitle mb-2 text-muted\" title=\"${item?.achievement_after_training.length > 120 ? item?.achievement_after_training:''}\">\n                              ${item && (item.achievement_after_training.length > 120) ? item.achievement_after_training.substring(0, 120) + \"...\" : item.achievement_after_training}\n                            </h6>\n\n                          </div>\n                        </div>\n                    <div class=\"mt-4\">\n                        <span style=\"font-size: 25px;display:block;line-height:0px;color:#264796;\">&#x275D;</span>\n                        <span class=\"card-text\" title=\"${item?.remarks_of_the_training.length > 200 ? item?.remarks_of_the_training:''}\">\n                        ${item && (item.remarks_of_the_training.length > 200) ? item.remarks_of_the_training.substring(0, 200) + \"...\" : item.remarks_of_the_training}\n                        </span>\n                    </div>\n                  </div>\n                </div>\n                </div>\n            `;\n        });\n       \n       root_element.querySelectorAll('.success_card_body').forEach((element)=>{\n           element.innerHTML = card_titles\n       });\n    });\n",
  "style": ".success_card_body{\n    gap:15px;\n    animation: scroll 14s linear infinite;\n}\n\n.img{\n  width: 6rem;\n  height: 6rem;\n  min-width:6rem;\n  min-height:6rem;\n  border-radius: 30%;\n  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\n  object-fit: cover;\n}\n\n.scroll-container-success{\n    position: relative;\n    overflow: hidden;\n    gap:15px;\n    scroll-behavior: smooth;\n  /*  mask-image: linear-gradient(*/\n  /*      var(--mask-direction, to right),*/\n  /*      hsl(0 0% 0% / 0),*/\n  /*      hsl(0 0% 0% / 1) 2%,*/\n  /*      hsl(0 0% 0% / 1) 98%,*/\n  /*      hsl(0 0% 0% / 0)*/\n  /*);*/\n}\n\n@keyframes scroll {\n    0% {\n        transform: translateX(0);\n    }\n    100% {\n        transform: translateX(calc(-100% - 15px));\n    }\n}\n\n/* Repeat the content to make the scroll effect continuous */\n#success_card_body::after {\n    content: attr(data-content);\n    display: block;\n}\n\n.scroll-container-success:hover .success_card_body {\n    animation-play-state: paused;\n}\n @keyframes fade {\n  to {\n    opacity: 0;\n    visibility: hidden;\n  }\n}"
 },
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<div class=\"main-container\" style=\"display: flex; gap: 15px; width: 100%; border: 2px solid #f0f0f0; border-radius: 10px; padding:2px 6px 32px;\">\n  <div class=\"p-2\">\n    <div style=\"font-size: 11.5px; font-weight: 550; margin-bottom: 5px;\">AVG SALARY OFFERED</div>\n    <div class=\"data text-success pt-2\" id=\"avg_salary\" style=\"font-size: 20px; font-weight: bold; letter-spacing: 2px;\">₹</div>\n  </div>\n</div>\n",
  "modified": "2024-08-02 09:59:04.867198",
  "name": "Avg monthly salary",
  "private": 0,
  "roles": [],
  "script": "async function callAPI(options) {\n  return new Promise((resolve, reject) => {\n    frappe.call({\n      ...options,\n      callback: async function (response) {\n        resolve(response?.message || response?.value)\n      }\n    });\n  })\n}\n \ncallAPI({\n  method: 'aisect.services.api.Avg_monthly_salary',\n  freeze: true,\n  freeze_message: __(\"Getting\"),\n}).then(forms_lists => {\n   var avg_salary = root_element.getElementById('avg_salary');\n    var formattedIncome = forms_lists[0]?.average_income ? forms_lists[0].average_income.toLocaleString('en-IN') : 0;\n    avg_salary.innerHTML = `<span>₹ ${formattedIncome}</span>`; \n});",
  "style": ""
 },
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<div class=\"col-lg-4 col-xs-12 col-md-6 py-2\">\n  <a href=\"/app/query-report/Placed%20Candidate\" class=\"card border rounded-lg\" style=\"height: 84px; font-size: 11px; color:#525252; text-decoration: none; flex: 1;\">\n    <div class=\"p-3\">\n      <div style=\"font-size: 11.5px; font-weight: 550;\">Placed Candidates</div>\n      <div class=\"data\"  style=\"font-size: 20px; font-weight: bold;\"></div>\n    </div>\n  </a>\n</div>",
  "modified": "2024-10-26 12:27:59.708714",
  "name": "Placed Candidate",
  "private": 0,
  "roles": [
   {
    "role": "Aisect Guest"
   }
  ],
  "script": "async function get_data() {\n    try {\n        const response = await frappe.call({\n            method: 'aisect.services.api.placed_candidate',\n            freeze: true,\n        });\n        \n        const data = response.message;\n        \n        return data;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n// Use async/await or .then to handle the promise\nasync function displayData() {\n    const count = await get_data();\n    const block = root_element.querySelector('.data');\n    \n    // Check if count exists and has data before accessing the first element\n    block.innerHTML = count && count[0] && count[0].count ? count[0].count : 0;\n}\n\ndisplayData();\n\n\n",
  "style": null
 },
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "\n<div id=\"fpo_count\" class=\"row\">\n    \n</div>\n\n\n ",
  "modified": "2024-07-25 10:43:26.066316",
  "name": "Report List",
  "private": 0,
  "roles": [],
  "script": "async function callAPI(options) {\n  return new Promise((resolve, reject) => {\n    frappe.call({\n      ...options,\n      callback: async function (response) {\n        resolve(response?.message || response?.value)\n      }\n    });\n  })\n}\n \ncallAPI({\n  method: 'aisect.services.api.candidate_placement_ging',\n  freeze: true,\n  freeze_message: __(\"Getting\"),\n}).then(forms_lists => { \n    let card=''\n    forms_lists.map((e)=>{\n        \n     card+= `<div class=\"col-lg-4 col-xs-12 col-md-6 py-2\">\n          <a href=\"/app/query-report/${e.url}\" class=\"card border rounded-lg\" style=\"height: 84px; font-size: 11px; color:#525252; text-decoration: none; flex: 1;\">\n            <div class=\"p-3\">\n              <div style=\"font-size: 11.5px; font-weight: 550;\">${e.name}</div>\n              <div class=\"data\"  style=\"font-size: 20px; font-weight: bold;\">${e.value}</div>\n            </div>\n          </a>\n        </div>`\n    })\n    var fpo_count = root_element.getElementById('fpo_count').innerHTML=card;\n    fpo_count.innerHTML =  forms_lists !== undefined ? forms_lists[0].candidate_count : 0; \n});",
  "style": "#fpo_count{\n    /*gap:8px*/\n}\n@media (max-width: 765px) {\n   \n}"
 }
]